using Sitecrawler.Core.Interface;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using HtmlAgilityPack;
using Crawler.Data.DbContext;
using System.Text.RegularExpressions;

namespace Sitecrawler.Core.Code
{
    public class soccerlineCrawler : commonCrawler
    {
        // Icrawler로 부터 상속받은 부분
        public override bool Login(string Username, string Password)
        {
            return true;
        }

        public override void UpdateRecentArticles(int boardid)
        {
        }

        public override void Noop()
        {

        }

        public override void ParseComment()
        {

        }

        public override void ParseClickNum()
        {

        }

        public override void ParseLikeNum()
        {

        }

        public override void Run()
        {
            var entities = new CrawlerStorage();

            //commonCrawler로 부터 상속받은 부분
            //사커라인
            var soccerline = webGetkr.Load("http://www.soccerline.co.kr/slboard/list.php?code=locker");
            System.Console.WriteLine("사커라인");
            var soccerline_tablecount = 0;
            var soccerline_trcount = 0;
            var soccerline_datecount = 0;

            //content_guid를 저장하는 List
            List<Guid> contentList = new List<Guid>();

            foreach (var soccerline_table in soccerline.DocumentNode.SelectNodes("//table[@class= 'te2']"))
            {
                soccerline_tablecount++;
                if (soccerline_tablecount == 1)
                {
                    foreach (var soccerline_tr in soccerline_table.Descendants())
                    {
                        soccerline_trcount++;
                        if (soccerline_trcount > 66)
                        {
                            var content = new Content();

                            foreach (var soccerline_time in soccerline_tr.Descendants().Where(p => p.GetAttributeValue("class", "dd") == "font03"))
                            {
                                soccerline_datecount++;
                                if (soccerline_datecount == 2)
                                {
                                    System.Console.WriteLine(soccerline_time.InnerText.Trim());

                                    string time = soccerline_time.InnerText.Trim();
                                    DateTime c_time = Convert.ToDateTime(time);

                                    //Db -> content/crawled(글 등록 시간) 에 저장하는 부분
                                    content.crawled = c_time;
                                    //Db -> content/for_boardid 에 저장하는 부분
                                    content.for_boardid = 1;
                                    //Db -> content/for_websiteid 에 저장하는 부분
                                    content.for_websiteid = 6;
                                    //Db -> content/_contentguid 에 저장하는 부분
                                    content.C_contentguid = Guid.NewGuid();
                                    //content_guid를 저장하는 부분
                                    contentList.Add(content.C_contentguid);

                                    System.Console.WriteLine(soccerline_time.InnerText.Trim());
                                }
                                else if (soccerline_datecount == 4)
                                {
                                    soccerline_datecount = 0;
                                }
                            }
                            
                            foreach (var soccerline_td in soccerline_tr.Descendants())
                            {
                                foreach (var soccerline_article in soccerline_td.Descendants())
                                {
                                    if (soccerline_article.Name == "a")
                                    {
                                        HtmlAttribute soccerline_url = soccerline_article.Attributes["href"];

                                        System.Console.Write("http://www.soccerline.co.kr/slboard/"+ soccerline_url.Value + " ");
                                        content.contents_url = ("http://www.soccerline.co.kr/slboard/" + soccerline_url.Value);

                                        //안의 내용을 가져오는 함수 실행.
                                        var details = RunContent("http://www.soccerline.co.kr/slboard/" + soccerline_url.Value);

                                        //안의 내용 text
                                        if (details.First() != "")
                                        {
                                            content.details = details.First();
                                        }
                                        else
                                        {
                                            content.details = "내용 없음";
                                        }
                                        //안의 내용의 html
                                        if (details[1] != "")
                                        {
                                            content.details_html = details[1];

                                            string input_src = details[1];
                                            string pattern_src = "src=[\"'](.+?)[\"'].*?>";
                                            if (Regex.Matches(input_src, pattern_src).Count > 0)
                                            {
                                                foreach (Match m in Regex.Matches(input_src, pattern_src))
                                                {
                                                    var srcdata = new Srcdata();
                                                    System.Console.WriteLine("-------------------------------------------------------------------------------");
                                                    System.Console.WriteLine(m.Value);
                                                    srcdata.C_srcid = Guid.NewGuid();
                                                    srcdata.for_contentid = content.C_contentguid;
                                                    srcdata.src = m.Value;
                                                    if (srcdata.C_srcid != null && srcdata.for_contentid != null && srcdata.src != null)
                                                    {
                                                        entities.Srcdatas.Add(srcdata);
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            content.details = "내용 없음";
                                        }

                                        foreach (var soccerline_title in soccerline_article.Descendants())
                                        {
                                            foreach (var soccerline_b in soccerline_title.SelectNodes("//b"))
                                            {
                                                soccerline_b.InnerHtml = "";
                                            }
                                        }

                                        System.Console.Write(soccerline_article.InnerText.Trim() + " : ");
                                        content.article = (soccerline_article.InnerText.Trim());
                                    }
                                }
                            }
                            
                            if (content.article != null && content.contents_url != null && content.crawled != null)
                            {
                                entities.Contents.Add(content);
                            }
                        }

                    }
                }
                else
                {
                    break;
                }
            }
            var snapshot = new Snapshot();
            snapshot.C_snapshotid = entities.Snapshots.Count() + 1;
            snapshot.for_websiteid = 6;
            snapshot.for_timeperiod = 1;
            snapshot.taken = DateTime.Now;

            if (snapshot.C_snapshotid != null && snapshot.for_websiteid != null && snapshot.for_timeperiod != null && snapshot.taken != null)
            {
                entities.Snapshots.Add(snapshot);
            }


            int contentSeq = 0;
            foreach (var content in contentList)
            {
                var snapshotTocontent = new SnapshotToContent();
                contentSeq++;
                snapshotTocontent.for_snapshotid = snapshot.C_snapshotid;
                snapshotTocontent.has_contentid = content;
                snapshotTocontent.seqno = contentSeq;

                if (snapshotTocontent.for_snapshotid != null && snapshotTocontent.has_contentid != null && snapshotTocontent.seqno != null)
                {
                    entities.SnapshotToContents.Add(snapshotTocontent);
                }
            }
            entities.SaveChanges();
        }
        public List<string> RunContent(string url)
        {
            var ruiwebContents = webGetkr.Load(url);
            //var content_count = 0;
            List<string> details = new List<string>();
            foreach (var content in ruiwebContents.DocumentNode.SelectNodes("//div[@id = 'DocContent']"))
            {
                System.Console.WriteLine("-------------------------------------------------------------------------------");
                System.Console.WriteLine("내용");
                string input = content.InnerText.Trim();
                string input2 = content.InnerHtml.Trim();
                System.Console.WriteLine(input);
                System.Console.WriteLine(input2);
                details.Add(input);
                details.Add(input2);
            }
            return details;
        }
    }
}
