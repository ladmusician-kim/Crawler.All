using Sitecrawler.Core.Interface;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using HtmlAgilityPack;
using Crawler.Data.DbContext;
using System.Text.RegularExpressions;
using Crawler.DTO.ResponseDTO;


namespace Sitecrawler.Core.Code
{
    public class cookCrawler : commonCrawler
    {
        // Icrawler로 부터 상속받은 부분
        public override bool Login(string Username, string Password)
        {
            return true;
        }

        public override void UpdateRecentArticles(int boardid)
        {
        }

        public override void Noop()
        {

        }

        public override void ParseComment()
        {

        }

        public override void ParseClickNum()
        {

        }

        public override void ParseLikeNum()
        {

        }
        public override void Run()
        {
            List<ContentDTO> contentList = new List<ContentDTO>();
            List<int> snapTocontentList = new List<int>();

            //commonCrawler로 부터 상속받은 부분
            // 82cook
            var cook = webGetutf.Load("http://www.82cook.com/entiz/enti.php?bn=15");
            var cook_licount = 0;
            System.Console.WriteLine("---------------------웹사이트 이름----------------");
            System.Console.WriteLine("82cook");


            foreach (var cook_div in cook.DocumentNode.SelectNodes("//td[@class= 'title']"))
            {
                var content = new ContentDTO();

                cook_licount++;
                if (cook_licount > 3)
                {
                    var nextsiblings = cook_div.NextSibling;
                    var nextnextsiblings = nextsiblings.NextSibling;
                    var nextnextnextsibling = nextnextsiblings.NextSibling;
                    var timestring = nextnextnextsibling.NextSibling.InnerText.Trim();
                    
                    System.Console.WriteLine("시간");
                    System.Console.WriteLine(timestring);

                    //시간
                    var time = DateTime.Parse(timestring);

                    foreach (var cook_article in cook_div.Descendants())
                    {
                        if (cook_article.Name == "a")
                        {
                            HtmlAttribute cook_url = cook_article.Attributes["href"];
                            string input_url = cook_url.Value;

                            //&amp 없애주는 함수 실행
                            string result = ParseUrl(input_url);
                            
                            System.Console.WriteLine("URL");
                            System.Console.Write("http://www.82cook.com/entiz/" + result + " ");
                            System.Console.WriteLine("글 제목");
                            System.Console.Write(cook_article.InnerText.Trim() + " ");
                            
                            // url
                            var url = ("http://www.82cook.com/entiz/" + result);
                            // 글 제목
                            var article = (cook_article.InnerText.Trim() + " ");

                            //안의 내용을 가져오는 함수 실행.
                            var innerArticle = RunContent("http://www.82cook.com/entiz/" + result);
                            var details = "";
                            var details_html = "";
                            List<SrcdataDTO> SrcDatas = new List<SrcdataDTO>();

                            //안의 내용 text
                            if (innerArticle.First() != "")
                            {
                                details = innerArticle.First();
                            }
                            else
                            {
                                details = "내용이 없습니다.";
                            }
                            //안의 내용의 html
                            if (innerArticle[1] != "")
                            {
                                details_html = innerArticle[1];
                                SrcDatas = ParseSrc(innerArticle[1]); 
                            }
                            contentList.Add(new ContentDTO
                            {
                                Crawled = time,
                                For_BoardId = 3,
                                Contents_URL = url,
                                Article = article,
                                Details = details,
                                Details_Html = details_html,
                                SrcDatas = SrcDatas
                            });
                        }
                    }
                }
            }
            SendSnapshot(contentList);
        }
        public List<string> RunContent(string url)
        {
            var ruiwebContents = webGetutf.Load(url);
            //var content_count = 0;
            List<string> details = new List<string>();
            foreach (var content in ruiwebContents.DocumentNode.SelectNodes("//div[@id = 'articleBody']"))
            {
                string input = content.InnerText.Trim();
                string input2 = content.InnerHtml.Trim();
                string pattern = "<!-- s : 기사 본문 -->";
                string pattern2 = "<!-- e : 기사 본문 -->";
                string replacement = "";
                string result = Regex.Replace(input, pattern, replacement);
                string result_1 = Regex.Replace(result, pattern2, replacement);
                string result2 = Regex.Replace(input2, pattern, replacement);
                string result2_1 = Regex.Replace(result2, pattern2, replacement);

                System.Console.WriteLine("-------------------------------------------------------------------------------");
                System.Console.WriteLine("HTML 내용");
                System.Console.WriteLine(result_1.Trim());

                System.Console.WriteLine("-------------------------------------------------------------------------------");
                System.Console.WriteLine("HTML 태그");
                System.Console.WriteLine(result2_1.Trim());

                details.Add(result_1.Trim());
                details.Add(result2_1.Trim());
            }
            return details;
        }
    }
}
