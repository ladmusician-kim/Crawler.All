using Sitecrawler.Core.Interface;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using HtmlAgilityPack;
using Crawler.Data.DbContext;
using System.Text.RegularExpressions;
using Crawler.DTO.ResponseDTO;

namespace Sitecrawler.Core.Code
{
    public class soccerlineCrawler : commonCrawler
    {
        // Icrawler로 부터 상속받은 부분
        public override bool Login(string Username, string Password)
        {
            return true;
        }

        public override void UpdateRecentArticles(int boardid)
        {
        }

        public override void Noop()
        {

        }

        public override void ParseComment()
        {

        }

        public override void ParseClickNum()
        {

        }

        public override void ParseLikeNum()
        {

        }

        public override void Run()
        {

            //commonCrawler로 부터 상속받은 부분
            //사커라인
            var soccerline = webGetkr.Load("http://www.soccerline.co.kr/slboard/list.php?code=locker");
            System.Console.WriteLine("사커라인");
            var soccerline_tablecount = 0;
            var soccerline_trcount = 0;
            var soccerline_datecount = 0;

            //content_guid를 저장하는 List
            List<int> contentList = new List<int>();

            foreach (var soccerline_table in soccerline.DocumentNode.SelectNodes("//table[@class= 'te2']"))
            {
                soccerline_tablecount++;
                if (soccerline_tablecount == 1)
                {
                    foreach (var soccerline_tr in soccerline_table.Descendants())
                    {
                        soccerline_trcount++;
                        if (soccerline_trcount > 66)
                        {
                            var content = new ContentDTO();
                            var article = "";
                            DateTime time = DateTime.Now;
                            foreach (var soccerline_time in soccerline_tr.Descendants().Where(p => p.GetAttributeValue("class", "dd") == "font03"))
                            {
                                soccerline_datecount++;
                                if (soccerline_datecount == 2)
                                {
                                    System.Console.WriteLine(soccerline_time.InnerText.Trim());
                                    string timestring = soccerline_time.InnerText.Trim();
                                    time = Convert.ToDateTime(timestring);
                                }
                                else if (soccerline_datecount == 4)
                                {
                                    soccerline_datecount = 0;
                                }
                            }
                            
                            foreach (var soccerline_td in soccerline_tr.Descendants())
                            {
                                foreach (var soccerline_article in soccerline_td.Descendants())
                                {
                                    if (soccerline_article.Name == "a")
                                    {
                                        foreach (var soccerline_title in soccerline_article.Descendants())
                                        {
                                            foreach (var soccerline_b in soccerline_title.SelectNodes("//b"))
                                            {
                                                soccerline_b.InnerHtml = "";
                                            }
                                        }

                                        System.Console.Write(soccerline_article.InnerText.Trim() + " : ");
                                        article = (soccerline_article.InnerText.Trim());

                                        HtmlAttribute soccerline_url = soccerline_article.Attributes["href"];

                                        System.Console.Write("http://www.soccerline.co.kr/slboard/"+ soccerline_url.Value + " ");
                                        var url = ("http://www.soccerline.co.kr/slboard/" + soccerline_url.Value);

                                        //안의 내용을 가져오는 함수 실행.
                                        var innerArticle = RunContent(url);

                                        var details = "";
                                        var details_html = "";
                                        List<SrcdataDTO> SrcDatas = new List<SrcdataDTO>();

                                        //안의 내용
                                        if (innerArticle.First() != "")
                                        {
                                            //details 저장
                                            details = innerArticle.First();
                                        }
                                        else
                                        {
                                            details = "내용이 없습니다.";
                                        }
                                        //안의 내용의 html
                                        if (innerArticle[1] != "")
                                        {
                                            //details_html 저장
                                            details_html = innerArticle[1];
                                            SrcDatas = ParseSrc(details_html);
                                        }

                                        content = new ContentDTO
                                        {
                                            Crawled = time,
                                            For_BoardId = 6,
                                            Contents_URL = url,
                                            Article = article,
                                            Details = details,
                                            Details_Html = details_html,
                                            SrcDatas = SrcDatas
                                        };

                                        if (content.C_ContentGuId != null && content.For_BoardId != null && content.Article != null && content.Contents_URL != null && content.Crawled != null && content.Details != null && content.Details_Html != null)
                                        {
                                            SendContent(content);
                                        }
                                    }
                                }
                            }
                            
                        }

                    }
                }
                else
                {
                    break;
                }
            }
            //var snapshot = new Snapshot();
            //snapshot.C_SnapshotId = entities.Snapshots.Count() + 1;
            //snapshot.For_WebsiteId = 6;
            //snapshot.For_Timeperiod = 1;
            //snapshot.Taken = DateTime.Now;

            //if (snapshot.C_SnapshotId != null && snapshot.For_WebsiteId != null && snapshot.For_Timeperiod != null && snapshot.Taken != null)
            //{
            //    entities.Snapshots.Add(snapshot);
            //}


            //int contentSeq = 0;
            //foreach (var content in contentList)
            //{
            //    var snapshotTocontent = new SnapshotToContent();
            //    contentSeq++;
            //    snapshotTocontent.For_SnapshotId = snapshot.C_SnapshotId;
            //    snapshotTocontent.Has_ContentId = content;
            //    snapshotTocontent.Seqno = contentSeq;

            //    if (snapshotTocontent.For_SnapshotId != null && snapshotTocontent.Has_ContentId != null && snapshotTocontent.Seqno != null)
            //    {
            //        entities.SnapshotToContents.Add(snapshotTocontent);
            //    }
            //}
            //entities.SaveChanges();
        }
        public List<string> RunContent(string url)
        {
            var ruiwebContents = webGetkr.Load(url);
            //var content_count = 0;
            List<string> details = new List<string>();
            foreach (var content in ruiwebContents.DocumentNode.SelectNodes("//div[@id = 'DocContent']"))
            {
                System.Console.WriteLine("-------------------------------------------------------------------------------");
                System.Console.WriteLine("내용");
                string input = content.InnerText.Trim();
                string input2 = content.InnerHtml.Trim();
                System.Console.WriteLine(input);
                System.Console.WriteLine(input2);
                details.Add(input);
                details.Add(input2);
            }
            return details;
        }
    }
}
