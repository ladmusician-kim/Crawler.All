using Sitecrawler.Core.Interface;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using HtmlAgilityPack;
using Crawler.Data.DbContext;
using System.Text.RegularExpressions;
using Crawler.DTO.ResponseDTO;

namespace Sitecrawler.Core.Code
{
    public class pomppuCrawler : commonCrawler
    {
        // Icrawler로 부터 상속 받은 부분
        public override bool Login(string Username, string Password)
        {
            return true;
        }

        public override void UpdateRecentArticles(int boardid)
        {
        }

        public override void Noop()
        {

        }

        public override void ParseComment()
        {

        }

        public override void ParseClickNum()
        {

        }

        public override void ParseLikeNum()
        {

        }

        public override void StartCrawl()
        {

        }

        public override void LoadImages()
        {

        }

        public override void GetContents()
        {

        }

        public override void DownloadImages()
        {

        }

        public override void SendSnapshot()
        {

        }
        public override void Run()
        {
            List<ContentDTO> contentList = new List<ContentDTO>();
            List<int> snapTocontentList = new List<int>();

            //commonCrawler로 부터 상속받은 부분
            //뽐뿌
            System.Console.WriteLine("뽐뿌");

            var ppomppu = webGetkr.Load("http://m.ppomppu.co.kr/new/bbs_list.php?id=freeboard");
            var ppomppu_articlescount = 0;

            foreach (var ppomppu_a_tag in ppomppu.DocumentNode.SelectNodes("//a[@class = 'noeffect']"))
            {
                ppomppu_articlescount++;
                if (ppomppu_articlescount > 1)
                {
                    var content = new ContentDTO();
                    
                    var article = "";
                    DateTime time = DateTime.Now;
                    
                    foreach (var ppomppu_article in ppomppu_a_tag.Descendants())
                    {
                        if (ppomppu_article.Name == "strong")
                        {
                            System.Console.Write(ppomppu_article.InnerText.Trim() + " ");
                            article = (ppomppu_article.InnerText.Trim() + " ");
                        }
                    }
                    foreach (var ppomppu_time in ppomppu_a_tag.Descendants().Where(p => p.GetAttributeValue("class", "dd") == "b"))
                    {
                        System.Console.WriteLine(ppomppu_time.InnerText.Trim());
                        string timestring = ppomppu_time.InnerText.Trim();
                        time = Convert.ToDateTime(timestring);
                    }

                    HtmlAttribute ppomppu_url = ppomppu_a_tag.Attributes["href"];

                    System.Console.Write("http://m.ppomppu.co.kr/new/" + ppomppu_url.Value + " ");
                    var url = ("http://m.ppomppu.co.kr/new/" + ppomppu_url.Value);

                    //안의 내용을 가져오는 함수 실행.
                    var innerArticle = RunContent(url);

                    var details = "";
                    var details_html = "";
                    List<SrcdataDTO> SrcDatas = new List<SrcdataDTO>();

                    //안의 내용
                    if (innerArticle.First() != "")
                    {
                        //details 저장
                        details = innerArticle.First();
                    }
                    else
                    {
                        details = "내용이 없습니다.";
                    }
                    //안의 내용의 html
                    if (innerArticle[1] != "")
                    {
                        //details_html 저장
                        details_html = innerArticle[1];
                        SrcDatas = ParseSrc(details_html);
                    }

                    contentList.Add(new ContentDTO
                    {
                        Crawled = time,
                        Contents_URL = url,
                        Article = article,
                        Details = details,
                        Details_Html = details_html,
                        SrcDatas = SrcDatas
                    });
                }
            }
            SendSnapshot(contentList, 12);
        }
        public List<string> RunContent(string url)
        {
            var pomppuContents = webGetkr.Load(url);
            //var content_count = 0;
            List<string> details = new List<string>();
            foreach (var content in pomppuContents.DocumentNode.SelectNodes("//div[@id = 'KH_Content']"))
            {
                System.Console.WriteLine("-------------------------------------------------------------------------------");
                System.Console.WriteLine("내용");
                string input = content.InnerText.Trim();
                string input2 = content.InnerHtml.Trim();

                System.Console.WriteLine(input);
                System.Console.WriteLine(input2);
                details.Add(input);
                details.Add(input2);
            }
            return details;
        }
    }
}
