using Sitecrawler.Core.Interface;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using HtmlAgilityPack;
using Crawler.Data.DbContext;
using System.Text.RegularExpressions;
using Crawler.DTO.ResponseDTO;

namespace Sitecrawler.Core.Code
{
    public class IlbeCrawler : commonCrawler
    {
        private readonly string url = "http://www.ilbe.com/ilbe";
        private readonly HtmlWeb webGetutf = new HtmlWeb
        {
            UserAgent = "Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_2 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8H7 Safari/6533.18.5",
            OverrideEncoding = Encoding.GetEncoding("UTF-8")
        };

        // IlberCrawler로 부터 상속받은 부분
        public override bool Login(string Username, string Password)
        {
            return true;
        }

        public override void UpdateRecentArticles(int boardid)
        {
        }

        public override void Noop()
        {

        }

        //public override SnapshotDTO ParseList()
        //{
        //    var firstpage = webGetutf.Load("http://www.ilbe.com/index.php?mid=ilbe&page=1");
        //    //var secondpage = webGetutf.Load("http://www.ilbe.com/index.php?mid=ilbe&page=2");
        //    //var thirdpage = webGetutf.Load("http://www.ilbe.com/index.php?mid=ilbe&page=3");

        //    var contentdiv = firstpage.DocumentNode.Descendants("ul").FirstOrDefault(c=> c.Attributes["class"].Value.Contains("lt"));

        //    var childs = contentdiv.ChildNodes;



        //    return null;
            
        //}

        public override void ParseComment()
        {

        }

        public override void ParseClickNum()
        {

        }

        public override void ParseLikeNum()
        {

        }

        public override void StartCrawl()
        {

        }

        public override void LoadImages()
        {

        }

        public override void GetContents()
        {

        }

        public override void DownloadImages()
        {

        }

        public override void SendSnapshot()
        {

        }
        public override void getList()
        {
            List<ContentDTO> contentList = new List<ContentDTO>();
            List<int> snapTocontentList = new List<int>();
            
            //commonCrawler로 부터 상속받은 부분
            //일베
            var ilbe = webGetutf.Load("http://www.ilbe.com/ilbe");
            var ilbe_timecount = 0;
            var ilbe_justforIlbe = 0;
            System.Console.WriteLine("일베");

            var ilbe_ul = ilbe.DocumentNode.SelectNodes("//ul[@class= 'lt']").FirstOrDefault();

            foreach (var ilbe_li in ilbe_ul.Descendants().Where(p=>p.Name == "li"))
            {
                ilbe_justforIlbe++;
                if (ilbe_justforIlbe > 2)
                {
                    var ilbe_li1 = ilbe_li.Descendants().SingleOrDefault(p=>p.Name == "a");
                    var content = new ContentDTO();

                    var ilbe_article = ilbe_li1.Descendants().SingleOrDefault(p => p.GetAttributeValue("class", "dd") == "title");
                    
                    //댓글갯수
                    ilbe_article.Descendants().Where(p => p.Name == "em").SingleOrDefault().InnerHtml = "";

                    System.Console.WriteLine(ilbe_article.InnerText.Trim());
                    // 제목
                    var article = (ilbe_article.InnerText.Trim());

                    List<string> timeList = new List<string>();
                    var ilbe_time = ilbe_li1.Descendants().Where(p => p.GetAttributeValue("class", "dd") == "time").SingleOrDefault().InnerText.Trim();
                    timeList.Add(ilbe_time);

                    //시간
                    DateTime time = Convert.ToDateTime(timeList[0]);
                    System.Console.WriteLine(time);

                    HtmlAttribute ilbe_url = ilbe_li1.Attributes["href"];
                    System.Console.Write(ilbe_url.Value + " ");

                    var url_params = ilbe_url.Value;
                    //url
                    var url = ("www.ilbe.com"+ilbe_url.Value);

                    ////안의 내용을 가져오는 함수 실행.
                    
                    //var innerArticle = RunContent(url);
                    //var details = "";
                    //var details_html = "";
                    //List<SrcdataDTO> SrcDatas = new List<SrcdataDTO>();
                    ////안의 내용 text
                    //if (innerArticle.First() != "")
                    //{
                    //    details = innerArticle.First();
                    //}
                    //else
                    //{
                    //    details = "내용이 없습니다.";
                    //}
                        
                    ////안의 내용의 html
                    //if (innerArticle[1] != "")
                    //{
                    //    details_html = innerArticle[1];
                    //    SrcDatas = ParseSrc(details_html); 
                    //}

                    contentList.Add(new ContentDTO
                    {
                        Crawled = time,
                        Contents_URL = url,
                        Article = article,
                        //Details = details,
                        //Details_Html = details_html,
                        //SrcDatas = SrcDatas
                    });
                }
            }
            SendSnapshot(contentList, 10);
        }
        public override void getDetails()
        {

        }
        public override void getImages()
        {

        }
        public override void Run()
        {
            
        }

        public List<string> RunContent(string url)
        {
            var ruiwebContents = webGetutf.Load(url);
            //var content_count = 0;
            List<string> details = new List<string>();
            foreach (var content in ruiwebContents.DocumentNode.SelectNodes("//div[@id = 'copy_layer_1']"))
            {
                System.Console.WriteLine("-------------------------------------------------------------------------------");
                System.Console.WriteLine("내용");
                string input = content.InnerText.Trim();
                string input2 = content.InnerHtml.Trim();
                System.Console.WriteLine(input);
                System.Console.WriteLine(input2);
                details.Add(input);
                details.Add(input2);
            }
            return details;
        }
    }
}
