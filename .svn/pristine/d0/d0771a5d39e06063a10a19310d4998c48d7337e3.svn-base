using Sitecrawler.Core.Interface;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using HtmlAgilityPack;
using Crawler.Data.DbContext;
using System.Text.RegularExpressions;

namespace Sitecrawler.Core.Code
{
    public class IlbeCrawler : commonCrawler
    {
        // IlberCrawler로 부터 상속받은 부분
        public override bool Login(string Username, string Password)
        {
            return true;
        }

        public override void UpdateRecentArticles(int boardid)
        {
        }

        public override void Noop()
        {

        }

        public override void ParseComment()
        {

        }

        public override void ParseClickNum()
        {

        }

        public override void ParseLikeNum()
        {

        }
        public override void Run()
        {
            var entities = new CrawlerStorage();

            //commonCrawler로 부터 상속받은 부분
            //일베
            var ilbe = webGetutf.Load("http://www.ilbe.com/ilbe");
            var ilbe_timecount = 0;
            var ilbe_justforIlbe = 0;
            System.Console.WriteLine("일베");

            //content_guid를 저장하는 List
            List<Guid> contentList = new List<Guid>();

            foreach (var ilbe_ul in ilbe.DocumentNode.SelectNodes("//ul[@class= 'lt']"))
            {
                foreach (var ilbe_li in ilbe_ul.Descendants())
                {
                    ilbe_justforIlbe++;
                    if (ilbe_justforIlbe > 60)
                    {
                        foreach (var ilbe_li1 in ilbe_li.Descendants())
                        {
                            if (ilbe_li1.Name == "a")
                            {
                                var content = new Content();

                                foreach (var ilbe_article in ilbe_li1.Descendants().Where(p => p.GetAttributeValue("class", "dd") == "title"))
                                {
                                    foreach (var ilbe_titletest in ilbe_article.Descendants())
                                    {
                                        foreach (var ilbe_em in ilbe_titletest.SelectNodes("//em"))
                                        {
                                            ilbe_em.InnerHtml = "";
                                        }
                                    }
                                    System.Console.Write(ilbe_article.InnerText.Trim());
                                    content.Article = (ilbe_article.InnerText.Trim());
                                }

                                foreach (var ilbe_time in ilbe_li1.Descendants().Where(p => p.GetAttributeValue("class", "dd") == "time"))
                                {
                                    ilbe_timecount++;
                                    if (ilbe_timecount == 1)
                                    {
                                        System.Console.WriteLine(ilbe_time.InnerText.Trim());

                                        string time = ilbe_time.InnerText.Trim();
                                        DateTime c_time = Convert.ToDateTime(time);

                                        //Db -> content/crawled(글 등록 시간) 에 저장하는 부분
                                        content.Crawled = c_time;
                                        //Db -> content/for_boardid 에 저장하는 부분
                                        content.For_BoardId = 1;
                                        //Db -> content/for_websiteid 에 저장하는 부분
                                        content.For_WebiteId = 10;
                                        //Db -> content/_contentguid 에 저장하는 부분
                                        content.C_ContentGuId = Guid.NewGuid();
                                        //content_guid를 저장하는 부분
                                        contentList.Add(content.C_ContentGuId);
                                    }
                                    else
                                    {
                                        ilbe_timecount = 0;
                                    }
                                }

                                HtmlAttribute ilbe_url = ilbe_li1.Attributes["href"];
                                System.Console.Write(ilbe_url.Value + " ");
                                content.Contents_URL = (ilbe_url.Value + " ");

                                //안의 내용을 가져오는 함수 실행.
                                var details = RunContent(ilbe_url.Value);

                                //안의 내용 text
                                if (details.First() != "")
                                {
                                    content.Details = details.First();
                                }
                                else
                                {
                                    content.Details = "내용 없음";
                                }
                                //안의 내용의 html
                                if (details[1] != "")
                                {
                                    content.Details_Html= details[1];

                                    string input_src = details[1];
                                    string pattern_src = "src=[\"'](.+?)[\"'].*?>";
                                    if (Regex.Matches(input_src, pattern_src).Count > 0)
                                    {
                                        foreach (Match m in Regex.Matches(input_src, pattern_src))
                                        {
                                            var srcdata = new Srcdata();
                                            System.Console.WriteLine("-------------------------------------------------------------------------------");
                                            System.Console.WriteLine(m.Value);
                                            srcdata.C_SrcId = Guid.NewGuid();
                                            srcdata.For_ContentId = content.C_ContentGuId;
                                            srcdata.Src = m.Value;
                                            if (srcdata.Src
                                                != null && srcdata.For_ContentId != null && srcdata.Src != null)
                                            {
                                                entities.Srcdatas.Add(srcdata);
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    content.Details = "내용 없음";
                                }

                                if (content.Article != null && content.Contents_URL != null && content.Crawled != null)
                                {
                                    entities.Contents.Add(content);
                                }
                            }
                        }
                    }
                }
            }

            var snapshot = new Snapshot();
            snapshot.C_SnapshotId = entities.Snapshots.Count() + 1;
            snapshot.For_WebsiteId = 10;
            snapshot.For_Timeperiod = 1;
            snapshot.Taken = DateTime.Now;

            if (snapshot.C_SnapshotId != null && snapshot.For_WebsiteId != null && snapshot.For_Timeperiod != null && snapshot.Taken != null)
            {
                entities.Snapshots.Add(snapshot);
            }

            int contentSeq = 0;
            foreach (var content in contentList)
            {
                var snapshotTocontent = new SnapshotToContent();
                contentSeq++;
                snapshotTocontent.For_SnapshotId= snapshot.C_SnapshotId ;
                snapshotTocontent.Has_ContentId = content;
                snapshotTocontent.Seqno = contentSeq;

                if (snapshotTocontent.For_SnapshotId != null && snapshotTocontent.Has_ContentId != null && snapshotTocontent.Seqno != null)
                {
                    entities.SnapshotToContents.Add(snapshotTocontent);
                }
            }

            entities.SaveChanges();
        }
        public List<string> RunContent(string url)
        {
            var ruiwebContents = webGetutf.Load(url);
            //var content_count = 0;
            List<string> details = new List<string>();
            foreach (var content in ruiwebContents.DocumentNode.SelectNodes("//div[@id = 'copy_layer_1']"))
            {
                System.Console.WriteLine("-------------------------------------------------------------------------------");
                System.Console.WriteLine("내용");
                string input = content.InnerText.Trim();
                string input2 = content.InnerHtml.Trim();

                System.Console.WriteLine(input);
                System.Console.WriteLine(input2);
                details.Add(input);
                details.Add(input2);
            }
            return details;
        }
    }
}
