using Sitecrawler.Core.Interface;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using HtmlAgilityPack;
using Crawler.Data.DbContext;
using System.Text.RegularExpressions;
using Crawler.DTO.ResponseDTO;

namespace Sitecrawler.Core.Code
{
    public class dogdripCrawler : commonCrawler
    {
        // Icrawler로 부터 상속받은 부분
        public override bool Login(string Username, string Password)
        {
            return true;
        }

        public override void UpdateRecentArticles(int boardid)
        {
        }

        public override void Noop()
        {

        }

        public override void ParseComment()
        {

        }

        public override void ParseClickNum()
        {

        }

        public override void ParseLikeNum()
        {

        }

        public override void StartCrawl()
        {

        }

        public override void LoadImages()
        {

        }

        public override void GetContents()
        {

        }

        public override void DownloadImages()
        {

        }

        public override void SendSnapshot()
        {

        }
        public override void getList(int count)
        {
            List<ContentDTO> contentList = new List<ContentDTO>();
            List<int> snapTocontentList = new List<int>();

            //commonCrawler로 부터 상속받은 부분
            //개드립
            var dogdrip = webGetutf.Load("http://www.dogdrip.net/dogdrip");
            //sitename
            System.Console.WriteLine("개드립");

            var dogdrip_ul = dogdrip.DocumentNode.SelectNodes("//ul[@class= 'lt']").FirstOrDefault();
            var articles = dogdrip_ul.Descendants("li");

            foreach (var dogdrip_li in articles)
            {
                //ilbe_justforIlbe++;
                var anchortag = dogdrip_li.ChildNodes.SingleOrDefault(c => c.Name.Equals("a"));
                var titlenode = anchortag.SelectSingleNode("./span[@class='title']");
                //var authnode = anchortag.SelectSingleNode("./span[@class='auth']");

                //댓글 갯수
                titlenode.SelectSingleNode("./em").Remove();

                //buildobject;
                contentList.Add(new ContentDTO
                {
                    Crawled = DateTime.Now,
                    Contents_URL = anchortag.GetAttributeValue("href", "undefined"),
                    Article = titlenode.InnerText.Trim(),
                    Url_Params = anchortag.GetAttributeValue("href", "undefined").Split('/')[3]
                });
            }
            SendSnapshot(contentList, 11);
        }
        public override void getDetails()
        {

        }
        public override void getImages()
        {

        }
        public override void Run()
        {

        }
        public List<string> RunContent(string url)
        {
            var dogdripContents = webGetutf.Load(url);
            //var content_count = 0;
            List<string> details = new List<string>();
            foreach (var content in dogdripContents.DocumentNode.SelectNodes("//div[@id = 'article_1']"))
            {
                System.Console.WriteLine("-------------------------------------------------------------------------------");
                System.Console.WriteLine("내용");
                string input = content.InnerText.Trim();
                string input2 = content.InnerHtml.Trim();

                System.Console.WriteLine(input);
                System.Console.WriteLine(input2);
                details.Add(input);
                details.Add(input2);
            }
            return details;
        }
    }
}
