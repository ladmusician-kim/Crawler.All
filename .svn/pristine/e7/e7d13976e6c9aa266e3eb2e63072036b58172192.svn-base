using Sitecrawler.Core.Interface;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using HtmlAgilityPack;
using Crawler.Data.DbContext;
using System.Text.RegularExpressions;
using Crawler.DTO.ResponseDTO;
using System.Net;
using System.Security.Cryptography;

namespace Sitecrawler.Core.Code
{
    public class IlbeCrawler : commonCrawler
    {
        private readonly int _perpage = 15;
        protected override int perpage { get { return _perpage; } }

        protected override List<ContentDTO> GetContentsPerPage(int page)
        {
            try
            {
                var contentList = new List<ContentDTO>();

                //commonCrawler로 부터 상속받은 부분
                //일베
                var ilbe = webGetutf.Load("http://www.ilbe.com/index.php?mid=ilbe&page=" + page);

                var ilbe_ul = ilbe.DocumentNode.SelectNodes("//ul[@class= 'lt']").FirstOrDefault();
                var articles = ilbe_ul.Descendants("li");

                foreach (var ilbe_li in articles)
                {
                    var eachitem = ilbe_li.SelectNodes(".//span[@class='notice']");

                    //공지사항은 제외
                    if (eachitem != null) continue;

                    //ilbe_justforIlbe++;
                    var anchortag = ilbe_li.ChildNodes.SingleOrDefault(c => c.Name.Equals("a"));
                    var titlenode = anchortag.SelectSingleNode("./span[@class='title']");
                    //var authnode = anchortag.SelectSingleNode("./span[@class='auth']");

                    //댓글 갯수
                    titlenode.SelectSingleNode("./em").Remove();
                    
                    //buildobject;
                    contentList.Add(new ContentDTO
                    {
                        Crawled = DateTime.Now,
                        Contents_URL = anchortag.GetAttributeValue("href", "undefined"),
                        Article = titlenode.InnerText.Trim(),
                        Url_Params = (new Uri(anchortag.GetAttributeValue("href", "undefined")).Query),
                        isDepricate = false
                    });
                }


                return contentList;
            }
            catch(Exception e)
            {
                return null;
            }
        }

        //details_html 쪼개는 함수
        protected override void ParseContent(ContentDTO content)
        {
            var loadedContent = webGetutf.Load(content.Contents_URL);
          
            try
            {
                var checkifdeprecated = loadedContent.DocumentNode.SelectNodes("//li[@class = 'hx_cate']");
                if (checkifdeprecated != null && checkifdeprecated.FirstOrDefault().InnerText.Trim() == "삭제된 글입니다.")
                {
                    content.isDepricate = true;
                    return;
                }

                var articlecontent = loadedContent.DocumentNode.SelectNodes("//div[@id = 'copy_layer_1']").LastOrDefault();
                content.Details = articlecontent.InnerText.Trim();
                content.Details_Html = articlecontent.InnerHtml.Trim();
                content.isDepricate = false;

                var imgnodes = articlecontent.SelectNodes(".//img");

                

                content.SrcDatas = new List<SrcdataDTO>();
                if (imgnodes == null) return;

                foreach (var img in imgnodes)
                {
                    var srcurl = new Uri(img.GetAttributeValue("src", "default"));
                    var srcdata = new SrcdataDTO
                    {
                        SourceUrl = srcurl.AbsoluteUri,
                        IsDepricated = false,
                        FileName = System.IO.Path.GetFileName(srcurl.LocalPath),
                        SrcGuId = Guid.NewGuid(),
                    };
                    img.SetAttributeValue("guid", srcdata.SrcGuId.ToString());

                    content.SrcDatas.Add(srcdata);
                }

           
            }
            catch(Exception e)
            {
                Console.WriteLine("ReStart");
                ParseContent(content);
            }
        }
    }
}
